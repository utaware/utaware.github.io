import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as c,c as d,a as o}from"./app-qSMjXEym.js";const r={},a=o('<h1 id="href-和-src-的区别" tabindex="-1"><a class="header-anchor" href="#href-和-src-的区别" aria-hidden="true">#</a> href 和 src 的区别</h1><h2 id="用途和使用场景" tabindex="-1"><a class="header-anchor" href="#用途和使用场景" aria-hidden="true">#</a> 用途和使用场景</h2><ul><li><code>src</code>是<code>source</code>的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置</li><li><code>href</code>是<code>Hypertext Reference</code>的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接</li></ul><h2 id="针对的标签" tabindex="-1"><a class="header-anchor" href="#针对的标签" aria-hidden="true">#</a> 针对的标签</h2><ul><li><code>src</code>属性通常用于<code>img</code>标签、<code>iframe</code>标签、<code>script</code>标签、<code>audio</code>标签和<code>video</code>标签等，用于引入相应资源。</li><li><code>href</code>属性通常用于<code>a</code>标签、<code>link</code>标签和<code>@import</code>指令等，用于创建链接。</li></ul><h2 id="加载方式" tabindex="-1"><a class="header-anchor" href="#加载方式" aria-hidden="true">#</a> 加载方式</h2><ul><li><code>src</code>属性指向的资源会被浏览器立即加载并解析。在加载过程中，浏览器会暂停其他资源的加载和文档的渲染，直到该资源被下载和执行完毕。</li><li><code>href</code>属性指向的资源在文档加载时是异步加载的，不会阻塞文档的渲染。浏览器会并行加载多个资源并继续渲染文档。</li></ul><h2 id="对文档影响" tabindex="-1"><a class="header-anchor" href="#对文档影响" aria-hidden="true">#</a> 对文档影响</h2><ul><li><code>src</code>属性对文档的结构和内容有直接影响。例如，<code>img</code>标签的<code>src</code>属性指定的图像资源会在文档中占据相应的位置。</li><li><code>href</code>属性对文档的结构和内容没有直接影响。例如，<code>link</code>标签的<code>href</code>属性指定的样式表会通过CSS规则来改变文档的样式。</li></ul><h2 id="可选性" tabindex="-1"><a class="header-anchor" href="#可选性" aria-hidden="true">#</a> 可选性</h2><ul><li><code>src</code>属性是必需的，如果没有指定<code>src</code>属性，则浏览器会认为该标签是无效。</li><li><code>href</code>属性是可选的，不是每个使用超链接的元素都必须包含它。</li></ul>',11),i=[a];function h(l,s){return c(),d("div",null,i)}const f=e(r,[["render",h],["__file","href和src的区别.html.vue"]]);export{f as default};
