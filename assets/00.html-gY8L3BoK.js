import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as e,a as t}from"./app-qSMjXEym.js";const o={},r=t('<h1 id="vue-实例-组件选项" tabindex="-1"><a class="header-anchor" href="#vue-实例-组件选项" aria-hidden="true">#</a> vue 实例/组件选项</h1><ol><li>副作用 (触发组件外的影响)</li></ol><ul><li>el</li></ul><ol start="2"><li>全局感知 (要求组件以外的知识)</li></ol><ul><li>name</li><li>parent</li></ul><ol start="3"><li>组件类型 (更改组件的类型)</li></ol><ul><li>functional</li></ul><ol start="4"><li>模板修改器 (改变模板的编译方式)</li></ol><ul><li>delimiters</li><li>comments</li></ul><ol start="5"><li>模板依赖 (模板内使用的资源)</li></ol><ul><li>components</li><li>directives</li><li>filters</li></ul><ol start="6"><li>组合 (向选项里合并 property)</li></ol><ul><li>extends</li><li>mixins</li></ul><ol start="7"><li>接口 (组件的接口)</li></ol><ul><li>inheritAttrs</li><li>model</li><li>props</li><li>propsData</li></ul><ol start="8"><li>本地状态 (本地的响应式 property)</li></ol><ul><li>data</li><li>computed</li></ul><ol start="9"><li>事件 (通过响应式事件触发的回调)</li></ol><ul><li>watch</li><li>hooks <ul><li>beforeCreate</li><li>created</li><li>beforeMount</li><li>mounted</li><li>beforeUpdate</li><li>updated</li><li>activated</li><li>deactivated</li><li>beforeDestroy</li><li>destroyed</li></ul></li></ul><ol start="10"><li>非响应式的 property (不依赖响应系统的实例 property)</li></ol><ul><li>methods</li></ul><ol start="11"><li>渲染 (组件输出的声明式描述)</li></ol><ul><li>template</li><li>render</li><li>renderError</li></ul>',23),a=[r];function s(u,d){return i(),e("div",null,a)}const p=l(o,[["render",s],["__file","00.html.vue"]]);export{p as default};
