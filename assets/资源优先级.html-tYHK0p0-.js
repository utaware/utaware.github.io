import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o as i,c as l,b as a,d as o,e as p,a as n}from"./app-qSMjXEym.js";const c={},r=n('<h1 id="资源优先级" tabindex="-1"><a class="header-anchor" href="#资源优先级" aria-hidden="true">#</a> 资源优先级</h1><p>浏览器主要根据「请求的类型」和在「文档标记中的位置」来确定请求的优先级</p><h2 id="加载阶段" tabindex="-1"><a class="header-anchor" href="#加载阶段" aria-hidden="true">#</a> 加载阶段</h2><ul><li>紧凑模式(Tight mode)</li><li>空闲模式(Idle mode)</li></ul><p><strong>紧凑模式</strong></p><p>紧凑模式Tight mode是初始阶段，它会「限制加载低优先级的资源」，直到文档的<code>&lt;body&gt;</code>被追加到文档中（基本上，在<code>&lt;head&gt;</code>中的所有阻塞脚本执行完毕后）。在紧凑模式下，发现这些低优先级资源时，只有在「同时存在不超过2个正在进行的请求」，才会加载它们。</p><p><strong>空闲模式</strong></p><p>在 空闲模式Idle mode中，浏览器会「在页面空闲时加载资源」。它会根据资源的优先级和是否可见来决定何时加载资源，以提高性能和用户体验。</p><h2 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级" aria-hidden="true">#</a> 优先级</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>各浏览器对资源优先级的分配存在差异，以<code>Chromium</code>为例：</p></div><ul><li>Highest <ul><li>主HTML文档</li><li>Font</li><li>css(early**)</li></ul></li><li>High <ul><li>script(early**)</li><li>import</li><li>xhr/fetch*</li><li>image(in viewport - after layout)</li><li>preload*</li></ul></li><li>Medium <ul><li>image(first 5 images &gt; 10000 px<sup>2</sup>)</li><li>css(late**)</li><li>script(late**)</li></ul></li><li>Low <ul><li>image</li><li>script(async/defer)</li><li>media(vedio/audio)</li><li>svg</li></ul></li><li>Lowest <ul><li>prefecth</li></ul></li></ul>',11),u={href:"https://docs.google.com/document/d/1bCDuq9H1ih9iNjgzyAL0gpwNFiEP4TZS-YLRp_RuMlc/edit",target:"_blank",rel:"noopener noreferrer"},d=a("code",null,"Chromium",-1),h=n(`<h2 id="fetchpriority" tabindex="-1"><a class="header-anchor" href="#fetchpriority" aria-hidden="true">#</a> fetchpriority</h2><p><code>fetchpriority</code>属性可以用于提示浏览器增加或降低所请求资源的优先级。</p><ul><li>high : 该资源「相对于其默认优先级」更高</li><li>low : 该资源相「对于其默认优先级」更低</li><li>auto : 默认值</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 将 preload 和 fetchpriority 合并兼容浏览器处理 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>
  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preload<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">fetchpriority</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>high<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.glitch.global/.../image-1.jpg<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/api/data.json&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token string">&#39;high&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5);function m(g,k){const s=e("ExternalLinkIcon");return i(),l("div",null,[r,a("p",null,[a("a",u,[d,o("的资源优先级文档"),p(s)])]),h])}const f=t(c,[["render",m],["__file","资源优先级.html.vue"]]);export{f as default};
