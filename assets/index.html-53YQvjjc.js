import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as n,a}from"./app-qSMjXEym.js";const s={},r=a(`<h1 id="v2-v3" tabindex="-1"><a class="header-anchor" href="#v2-v3" aria-hidden="true">#</a> v2&amp;v3</h1><h2 id="数据绑定原理" tabindex="-1"><a class="header-anchor" href="#数据绑定原理" aria-hidden="true">#</a> 数据绑定原理</h2><ul><li>v2: <code>Object.definePropert()</code></li><li>v3: <code>Proxy</code></li></ul><h2 id="支持fragments" tabindex="-1"><a class="header-anchor" href="#支持fragments" aria-hidden="true">#</a> 支持Fragments</h2><ul><li>v2: 否, 单个根节点</li><li>v3: 是, 多个根节点</li></ul><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> api</h2><ul><li>v2: 选项式</li><li>v3: 组合式</li></ul><h2 id="创建实例" tabindex="-1"><a class="header-anchor" href="#创建实例" aria-hidden="true">#</a> 创建实例</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// v2</span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>

<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// v3</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原型属性" tabindex="-1"><a class="header-anchor" href="#原型属性" aria-hidden="true">#</a> 原型属性</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// v2</span>
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
<span class="token comment">// v3</span>
app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="全局api" tabindex="-1"><a class="header-anchor" href="#全局api" aria-hidden="true">#</a> 全局API</h2><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h2><table><thead><tr><th style="text-align:center;">Vue2</th><th style="text-align:center;">vue3</th></tr></thead><tbody><tr><td style="text-align:center;">beforeCreate</td><td style="text-align:center;">setup</td></tr><tr><td style="text-align:center;">created</td><td style="text-align:center;">setup</td></tr><tr><td style="text-align:center;">beforeMount</td><td style="text-align:center;">onBeforeMount</td></tr><tr><td style="text-align:center;">mounted</td><td style="text-align:center;">onMounted</td></tr><tr><td style="text-align:center;">beforeUpdate</td><td style="text-align:center;">onBeforeUpdate</td></tr><tr><td style="text-align:center;">updated</td><td style="text-align:center;">onUpdated</td></tr><tr><td style="text-align:center;">beforeDestroy</td><td style="text-align:center;">onBeforeUnmount</td></tr><tr><td style="text-align:center;">destroyed</td><td style="text-align:center;">onUnmounted</td></tr><tr><td style="text-align:center;">activated</td><td style="text-align:center;">onActivated</td></tr><tr><td style="text-align:center;">deactivated</td><td style="text-align:center;">onDeactivated</td></tr><tr><td style="text-align:center;">errorCaptured</td><td style="text-align:center;">onErrorCaptured</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;">onRenderTriggered</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;">onRenderTracked</td></tr></tbody></table><h2 id="组件通信" tabindex="-1"><a class="header-anchor" href="#组件通信" aria-hidden="true">#</a> 组件通信</h2><table><thead><tr><th style="text-align:center;">方式</th><th style="text-align:center;">Vue2</th><th style="text-align:center;">Vue3</th></tr></thead><tbody><tr><td style="text-align:center;">父传子</td><td style="text-align:center;">props</td><td style="text-align:center;">props</td></tr><tr><td style="text-align:center;">子传父</td><td style="text-align:center;">$emit</td><td style="text-align:center;">emits</td></tr><tr><td style="text-align:center;">父传子</td><td style="text-align:center;">$attrs</td><td style="text-align:center;">attrs</td></tr><tr><td style="text-align:center;">子传父</td><td style="text-align:center;">$listeners</td><td style="text-align:center;">无(合并到 attrs方式)</td></tr><tr><td style="text-align:center;">父传子</td><td style="text-align:center;">provide</td><td style="text-align:center;">provide</td></tr><tr><td style="text-align:center;">子传父</td><td style="text-align:center;">inject</td><td style="text-align:center;">inject</td></tr><tr><td style="text-align:center;">子组件访问父组件</td><td style="text-align:center;">$parent</td><td style="text-align:center;">无</td></tr><tr><td style="text-align:center;">父组件访问子组件</td><td style="text-align:center;">$children</td><td style="text-align:center;">无</td></tr><tr><td style="text-align:center;">父组件访问子组件</td><td style="text-align:center;">$ref</td><td style="text-align:center;">expose&amp;ref</td></tr><tr><td style="text-align:center;">兄弟传值</td><td style="text-align:center;">EventBus</td><td style="text-align:center;">mitt</td></tr></tbody></table>`,16),l=[r];function d(i,c){return e(),n("div",null,l)}const u=t(s,[["render",d],["__file","index.html.vue"]]);export{u as default};
