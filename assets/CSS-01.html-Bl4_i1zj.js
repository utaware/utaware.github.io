import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as t,a}from"./app-qSMjXEym.js";const d={},l=a('<h1 id="三栏布局" tabindex="-1"><a class="header-anchor" href="#三栏布局" aria-hidden="true">#</a> 三栏布局</h1><h2 id="圣杯布局" tabindex="-1"><a class="header-anchor" href="#圣杯布局" aria-hidden="true">#</a> 圣杯布局</h2><ul><li>两边固定宽度，中间自适应的三栏布局</li><li>中间内容元素在dom元素次序中优先位置，优先渲染</li></ul><p><strong>原理</strong></p><blockquote><p>先通过float浮动元素排到一行，这时候便会按照middle，left，right的顺序排布，但由于middle宽度自适应原因会挤下去。如此再通过postion和margin负值来调整左右元素位置，实现看似占位的元素对齐。</p></blockquote><p><strong>缺点</strong></p><blockquote><p>当页面不断收缩时container和middle宽度都会对应减小。而当减小到低于两侧宽度时，将因无法容纳他们造成布局被破坏(magin-100%不成立)。</p></blockquote><div class="common cup"><header class="top">header</header><div class="main"><div class="center flt">center</div><div class="left flt">left</div><div class="right flt">right</div><div class="clear"></div></div><footer class="bottom">footer</footer></div><h2 id="双飞翼布局" tabindex="-1"><a class="header-anchor" href="#双飞翼布局" aria-hidden="true">#</a> 双飞翼布局</h2><ul><li>圣杯布局与双飞翼布局，都是属于三列布局的经典布局</li><li>双飞翼布局是圣杯布局的优化版，由淘宝UED提出</li></ul><p><strong>原理</strong></p><blockquote><p>相较于圣杯布局不是通过container的padding, 而是通过自身的margin来留出占位空间。这样margin-left的100%就是整个容器的宽度没有扣除的部分，即便middle缩小到0也不会打乱布局。</p></blockquote><div class="common wing"><header class="top">header</header><div class="main"><div class="parent flt"><div class="middle">middle</div></div><div class="left flt">left</div><div class="right flt">right</div><div class="clear"></div></div><footer class="bottom">footer</footer></div>',13),o=[l];function r(s,c){return i(),t("div",null,o)}const f=e(d,[["render",r],["__file","CSS-01.html.vue"]]);export{f as default};
